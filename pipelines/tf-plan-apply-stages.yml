parameters: 
- name: environment
  displayName: Environment
  type: string
  default: dev
  values: 
  - dev
  - prod

variables:  
  WORK_DIR: '$(System.DefaultWorkingDirectory)/todoapp_infra'

trigger: none
pool: zelectric_pool
stages:
- stage: TerraformInitAndPlan
  displayName: Terraform Init and Plan
  jobs:
  - job: TerraformInitAndPlan
    displayName: Terraform Init and Plan
    steps:
    - task: tfsec@1
      inputs:
        version: 'v1.26.0'
        dir: '$(WORK_DIR)' 

    - task: TerraformTaskV4@4
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(WORK_DIR)'
        commandOptions: '-upgrade'
        backendServiceArm: 'azure-c'
        backendAzureRmResourceGroupName: 'dev-todo-rg-westus'
        backendAzureRmStorageAccountName: 'azuresaproter'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: '${{ parameters.environment }}.terraform.tfstate'
      
    - task: TerraformTaskV4@4
      displayName: Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(WORK_DIR)'
        commandOptions: '--var-file=${{ parameters.environment }}.terraform.tfvars'
        environmentServiceNameAzureRM: 'azure-c'

- stage: ValidationAndTerraformApply
  displayName: Validation and Terraform Apply
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
  jobs:
  - job: ManualValidation
    pool: server
    steps:
    - task: ManualValidation@1
      inputs:
        notifyUsers: abc@abc.com 
        timeoutInMinutes: 1
  - job: TerraformApply
    dependsOn: ManualValidation
    steps:
    - task: TerraformTaskV4@4
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(WORK_DIR)'
        commandOptions: '-upgrade'
        backendServiceArm: 'azure-c'
        backendAzureRmResourceGroupName: 'dev-todo-rg-westus'
        backendAzureRmStorageAccountName: 'azuresaproter'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: '${{ parameters.environment }}.terraform.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(WORK_DIR)'
        commandOptions: '--var-file=${{ parameters.environment }}.terraform.tfvars'
        environmentServiceNameAzureRM: 'azure-c'            